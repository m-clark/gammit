% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_gamm.R
\name{predict_gamm}
\alias{predict_gamm}
\title{Make predictions with or without random effects}
\usage{
predict_gamm(model, newdata, re_form = NULL, se = FALSE,
  include = NULL, exclude = NULL, keep_prediction_data = FALSE, ...)
}
\arguments{
\item{model}{A gam class model from the \code{\link{mgcv}} package.}

\item{newdata}{Data on which to predict on. Empty by default.}

\item{re_form}{\code{NULL}, \code{NA}, or character string. If \code{NULL} (default), all
random effects will be used.  If NA, no random effects will be used. If
character, must be of the form \code{"s(varname)"}, where \code{varname} would be the
name of the grouping variable pertaining to the random effect.  Appended to
\code{include}.}

\item{se}{Logical.  Include standard errors or not. Default is FALSE.}

\item{include}{Which random effects to include in prediction. See
\code{\link{predict.gam}} for details.}

\item{exclude}{Which random effects to exclude in prediction. See
\code{\link{predict.gam}} for details.}

\item{keep_prediction_data}{Keep the model frame or newdata that was used in
the prediction in final output? Default is FALSE.}

\item{...}{Other arguments for \code{\link{predict.gam}}.}
}
\value{
A data frame of predictions and possibly standard errors.
}
\description{
Use predict in an \code{lme4} style on gam/bam objects from \code{\link{mgcv}}.
}
\details{
This is a wrapper for \code{\link{predict.gam}}.  The goal is to
have similar functionality with predict function in \code{lme4}, which makes it
easy to drop all random effects or include specific ones.  Some of this
functionality is not yet available for class \code{bam}.
}
\examples{
library(lme4)
library(mgcv)
lmer_model <- lmer(Reaction ~ Days + (Days || Subject), data = sleepstudy)
ga_model <- gam(Reaction ~ Days + s(Subject, bs = "re") + s(Days, Subject, bs = "re"),
  data = sleepstudy,
  method = "REML"
)

head(
  data.frame(
    lmer = predict(lmer_model),
    gam = predict_gamm(ga_model)
  )
)

head(
  cbind(
    lmer = predict(lmer_model, re.form = NA),
    gam1 = predict_gamm(ga_model, re_form = NA),
    gam2 = predict_gamm(ga_model,
      exclude = c("s(Subject)", "s(Days,Subject)")
    )
  )
)

head(predict_gamm(ga_model, se = TRUE))
}
\seealso{
\code{\link{predict.gam}}
}
